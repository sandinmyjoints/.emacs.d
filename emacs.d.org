#+TITLE: emacs.d.org
#+DATE: <2017-07-28 Fri>
#+AUTHOR: William Bert
#+EMAIL: william.bert@gmail.com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline author:nil c:nil
#+OPTIONS: creator:comment d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t
#+OPTIONS: num:nil p:nil pri:nil stat:t tags:nil tasks:t tex:t timestamp:nil toc:nil
#+OPTIONS: todo:t |:t
#+STARTUP: overview
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
* How to recover a frozen Emacs process
  - kill -USR2
  - Then set debug-on-quit back to nil
* Magit variables
magit-branch-prefer-remote-upstream
magit-remote-add-set-remote.pushDefault
magit-auto-revert-mode
* cl- functions such as first/cl-first
  - https://github.com/purcell/emacs.d/blob/effd06ad39f73cf84bdfde082d986827547ee00e/lisp/init-lisp.el#L285
* DONE Use ELPA.
   CLOSED: [2013-02-18 Mon 14:51]
* DONE Make into repo.
   CLOSED: [2013-02-18 Mon 14:52]
* DONE Use submodules where possible.
   CLOSED: [2013-02-18 Mon 14:52]

* DONE Don't ignore all of elisp dir
  CLOSED: [2013-02-18 Mon 15:52]
* DONE Coffee-script ctags.
  CLOSED: [2013-02-18 Mon 16:51]
  - https://gist.github.com/mads379/907245
  - trying: ctags -e -R --exclude=*.js --exclude=node_modules .
    but it doesn't do coffee, despite putting coffee definitions in .ctags and .etags
  - this command worked:
ctags -e -R --exclude=*.js --exclude=node_modules --exclude=local_notes \
--langdef=coffee \
--langmap=coffee:.coffee \
--regex-coffee="/^class ([A-Za-z.]+)( extends [A-Za-z.]+)?$/\1/c,class/" \
--regex-coffee="/^[ \t]*@?([A-Za-z.]+):.*[-=]>.*$/\1/f,function/" \
--regex-coffee="/^[ \t]*([A-Za-z.]+)[ \t]+=.*[-=]>.*$/\1/f,function/" \
--regex-coffee="/^[ \t]*([A-Za-z.]+)[ \t]+=[^->\n]*$/\1/v,variable/" \
.

  - but only sort of. the definitions don't really work across modules and such.
* DONE Emacs in Chrome
  CLOSED: [2013-02-20 Wed 21:27]

  - via SSH in Chrome: https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo
  - some discussion: http://lists.gnu.org/archive/html/emacs-devel/2012-01/msg00421.html
* DONE Try Emacs Mac Port
  CLOSED: [2013-02-19 Tue 22:02]
  - https://github.com/railwaycat/emacs-mac-port
* DONE Fullscreen Emacs
  CLOSED: [2013-02-20 Wed 21:28]
* DONE Fix multiple-cursors and expand-region                           :bug:
  CLOSED: [2013-03-10 Sun 13:08]

  - [X] Fixed some compile errors.
  - [X] Still getting other errors from espuds.
  - [X] mark next like this errors:
    - https://github.com/magnars/multiple-cursors.el/issues/39
    - supposedly fixed in emacs trunk, but 24.3-rc1 not working
    - upgraded, moved to packages instead of submods
* DONE S-up and S-down in org-mode
  CLOSED: [2013-03-10 Sun 13:18]

* DONE Diff Colors in Magit
  CLOSED: [2013-03-10 Sun 18:51]

* DONE Use safer require / don't error out if package isn't installed
  CLOSED: [2013-03-10 Sun 21:05]
  - (when (require 'foo nil t) ...) ;; last argument to require means to simply
    return nil but not signal an error in the event that a feature cannot be
    loaded.

* DONE Test out full install on virgin Emacs
  CLOSED: [2013-03-10 Sun 21:20]

** DONE Emacs 23
   CLOSED: [2013-03-10 Sun 21:20]

** DONE Emacs 24
   CLOSED: [2013-03-10 Sun 21:20]
* DONE Files to visit on startup in non-dirtree window.
  CLOSED: [2013-03-10 Sun 21:21]
   - E.g.: (find-file "~/emacs/gist-3743892/init.el")
* DONE Command as meta in Terminal
  CLOSED: [2013-03-10 Sun 21:44]
  - https://github.com/aim-stuff/cmd-key-happy
  - Collision between M-v/Cmd-v. Bind scroll-down-command to <M-up> as well.

* DONE Host windata.el on github
  CLOSED: [2013-03-10 Sun 21:49]
* DONE Stripped down version for text terminals/new machines, or infer what libraries are installed/exist, or install them automatically.
  CLOSED: [2013-03-10 Sun 21:51]
  - [X] bare.el.
  - [ ]

* DONE Sometimes C-p and C-n skip a line                                :bug:
  CLOSED: [2013-05-19 Sun 15:13]

  - May only happen in Emacs-Mac-24.3? no, now also happens in Emacs-24.3
    - Happens in Emacs-Mac, both 24.2 and 24.3-rc1 and 24.3
    - Does not happen in Cocoa Emacs
    - Happens in emacsforosx.com 24.3
  - Repro: C-p skips first non-blank line after a blank line. See example.
    - Repro: use C-n to move past, main-config.coffee line 21, then use C-p to
    move back, it will skip line 21
    - Easiest: ./Emacs -Q, then visit ~/emacs-ctl-p-skip-lines-example
  - Conditions
    - Happens both when line-move-visual is nil and t
    - Happens in all modes
    - Happens with -nw from console
    - Does not happen with -Q from console
    - Does not happen with -nw -q from console. So what is causing it?
    -
    - Not multiple-cursors, expand-region, or smart-forward
    - it's fill-column-indicator
    - Happens with Emacs 24.3 from emacsforosx.com both -nw and windowed.
    - repro from -Q:
  - Obtain fill-column-indicator. I'm using version 20130126.1540 from Melpa.
  - (add-to-list 'load-path "/Users/william/.emacs.d/elpa/fill-column-indicator-20130126.1540/")
  - (require 'fill-column-indicator nil t)
  - Create new buffer in fundamental mode
  - M-x turn-on-fci-mode
  - Type the following until EOF, preserving newlines:

C-p will skip

C-p will land here
C-p will skip

Start here
EOF

1. Place cursor on "Start here" line, then hit C-p. Behavior will match what
   the text says.
2. describe-variable line-move-visual is nil
   - filed a bug https://github.com/alpaker/Fill-Column-Indicator/issues/32
   - dup of https://github.com/alpaker/Fill-Column-Indicator/issues/31
* DONE conditionally add packages to package list
  CLOSED: [2013-05-12 Sun 12:54]

  - .e.g, rainbow-mode only if Emacs >=24
  -

* DONE make ` a paired char
  CLOSED: [2013-05-19 Sun 15:36]
* DONE linum
  CLOSED: [2013-05-19 Sun 15:44]
* DONE Try out yasnippets
  CLOSED: [2014-01-26 Sun 14:50]
  - remember that yasnippets wants snippets in a directory named after the
    mode they are used in -- that is why coffee-mode didn't work when it was
    in a directory named yasnippet-coffee-script-snippets, and why js
    snippets didn't work in js2-mode (Javascript IDE) when they were in js-mode.
* DONE Fix the submodule -dirty caused by .elc files
  CLOSED: [2013-06-30 Sun 15:10]

  - Maybe just use more packages and fewer submodules
  - git status --ignore-submodules=untracked
  - http://stackoverflow.com/questions/3240881/git-can-i-suppress-listing-of-modified-content-dirty-submodule-entries-in-sta

* DONE Fix client test marker in coffee files
  CLOSED: [2013-08-11 Sun 18:18]

  - C-c C-l
  - (define-key map (kbd "C-c C-l") 'coffee-send-line) in coffee-mode.el
  - Currently fixing this by commenting out the key binding in coffee-mode.
    Better to override the key-map, but because of the way I'm setting up the
    custom marker functions, that is not straightforward.
  - look at set-temporary-overlay-map
* DONE Fix save mark to register/jump to register                       :bug:
  CLOSED: [2013-07-03 Wed 12:45]
  - what is breaking this?
  - broken everywhere?
  - repro?
* DONE dired: edit with, shell commands
  CLOSED: [2013-07-03 Wed 12:46]
  - C-x C-q to start editing, C-c C-c to finish
  - http://www.gnu.org/software/emacs/manual/html_node/emacs/Shell-Commands-in-Dired.html
* DONE magit log crashes                                                :bug:
  CLOSED: [2013-07-03 Wed 12:47]

  - repro: open a git repo (did it with both fluencia and .emacs.d) in
    magit-status. magit-log. quit out of log. quit out of magit-status. repeat a few
    times until it crashes.
  - crashes in draw_glyphs
  - repro from emacs -Q
  - (add-to-list 'load-path "./elisp/magit")
  - (load-file 'magit)
  - Open a file that is in a git repo.
  - magit-status
  - l for magit-log
  - l for short log
  - submitted as http://debbugs.gnu.org/cgi/bugreport.cgi?bug=14378
  - severity 14378 important
** TODO Keep Magit from slowing down after being open for a while.

  - Try profiling: http://stackoverflow.com/a/6732810
  - Likely due to use of magit-log
  - maybe track magit maint branch instead?
* DONE incremental-search breaks                                        :bug:
  CLOSED: [2014-01-26 Sun 14:50]

  - Maybe related to org-mode?
  - One time, broke in everything but org-mode.
  - Maybe related to recursive editing
  - In emacs-lisp-mode, get (wrong-type-argument stringp nil)
  - Got out of it by 1) C-g several times or 2) ESC several times. or 3) Doing
    C-s and immediately backspace.
  - http://www.gnu.org/software/emacs/manual/html_node/emacs/Error-in-Isearch.html#Error-in-Isearch
* DONE map chef node names to aws ips
  CLOSED: [2014-01-26 Sun 14:51]
  - goal -- map instance name to ipv4, public_hostname
  - use tramp with chef node name
  - emacs overlays to replace ipv4 or public_hostname with chef node name: http://www.gnu.org/software/emacs/manual/html_node/elisp/Overlays.html
  - inverse: when I input aws-*, emacs looks up public_hostname or IP.
  - knife list nodes| knife xargs show
  - ec2.public_ipv4 and ec2.public_hostname
  - gem install knife-essential
  - brew install jq
  - knife show nodes/aws-staging-wordpop-oneiric-m1s-00.json|sed "1 d"|jq '.automatic.ec2'
  - knife show nodes/aws-staging-wordpop-oneiric-m1s-00.json|sed "1 d"|jq '.automatic.ec2.public_ipv4'
  - [X] look up values from knife commands. cache values. ability to force refresh.
  - [X] new rake command: rake query_ip[*,*] does all. How to get emacs to be able
    to run? rvm_use 1.9.3@ops && cd ~/scm/sd/ops/chef && rake query_ip[*,*]
  - [ ] need to parse input to tramp
    - look at tramp-file-name-host in tramp.el. do advice for it?
    - it was tramp-dissect-file-name that needed advice.
  - or could make a fn that takes (node name, file) and then calls tramp fn to open
    file on node name
* DONE node repl
  CLOSED: [2014-01-28 Tue 23:23]
* DONE recognize virtualenvs
  CLOSED: [2014-01-28 Tue 23:41]
  - https://github.com/porterjamesj/virtualenvwrapper.el
* DONE Emacs golf
  CLOSED: [2014-09-29 Mon 19:36]
* DONE try flx / flx-ido
  CLOSED: [2014-09-29 Mon 19:37]
* DONE session save / restore
  - http://www.gnu.org/savannah-checkouts/gnu/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html
* DONE Appearance
  CLOSED: [2014-09-29 Mon 20:10]
** INACTIVE Set window position on startup.
   CLOSED: [2014-09-29 Mon 20:09]
   - not needed since it's fullscreen
** DONE Toggle on fullscreen.
   CLOSED: [2014-03-10 Mon 09:43]
* DONE better comment box
  CLOSED: [2014-10-02 Thu 08:19]
   - http://www.emacswiki.org/emacs/rebox2
** TODO customize for js
** TODO customize for coffee
* INACTIVE Colors on Emacs 23 on a console
  CLOSED: [2017-08-01 Tue 17:33]

  - Background face on transparent terminals is awful
  - install color-theme and choose one
  - magit is messed up
  - Revisit appearance.el and make sensible settings for a windowed display vs a
    terminal display
  - Is it better/easier not to use transparent background in Terminal?
* DONE Try perspectives or eproject or...
  CLOSED: [2017-03-09 Thu 21:57]
  - https://github.com/nex3/perspective-el
  - https://github.com/jrockway/eproject
  - https://github.com/rdallasgray/project-persist
  - https://github.com/bbatsov/projectile
    - https://github.com/sabof/project-explorer instead of dirtree
* DONE flycheck mode
  CLOSED: [2017-08-01 Tue 17:33]
** DONE flycheck with coffeelint
  - In Ataltana, it uses coffeelint that is on the exec-path due to
    ./node_modules/.bin being on the execpath and due to installing coffeelint in
    package.json directly. It errors out, probably an old version.
  - Most of the time, we don't have coffeelint in package.json, but rather
    grunt-coffeelint. So I am installing coffeelint globally so that its always
    available. That works!
** INACTIVE Coffee-script compile and flymake.
   CLOSED: [2017-07-28 Fri 20:51]
  - Way to use coffee-watch?
  - https://github.com/purcell/flymake-coffee
  - Need to specify coffee binary in dir-locals, per project
  - http://alex.kavanagh.name/2012/03/linting-coffee-script-in-emacs/
** INACTIVE rst / sphinx
   CLOSED: [2017-07-28 Fri 20:51]
   - it is using the version of sphinx that is on the exec-path due to venv-activate
   - in eng-docs or hegemone, it errors out because sphinx is too old for the
     checker.
** DONE have flycheck show that a buffer has errors in mode line
   CLOSED: [2017-07-29 Sat 21:58]
* INACTIVE coffee-mode sourcemap
  CLOSED: [2017-08-01 Tue 17:33]
  - https://github.com/syohex/emacs-sourcemap
  - https://github.com/defunkt/coffee-mode/issues/202#issuecomment-37097782
* INACTIVE find-file-in-project. See: http://emacswiki.org/emacs/FindFileInProject
  CLOSED: [2017-08-01 Tue 17:34]
* INACTIVE w3m
  CLOSED: [2017-08-01 Tue 17:34]
  - try for gmail
* INACTIVE Octopress and Emacs
  CLOSED: [2017-08-01 Tue 17:34]

  - Want to:
    - [-] create new write post
      - wrapper around rake new_post[title]
      - [X] octomacs-new-post
      - [X] write post in MD
      - [ ] write post in org
    - [ ] preview
      - temporary: could open a new shell and run rvm
        - (ansi-term explicit-shell-file-name (concat "*" 'project "-term" "*"))
      - rake generate
      - rake preview
    - [-] start watch
      - [X] octopress-shell
      - [ ] start in a new shell: rake watch
    - [ ] publish
      - rake generate
      - git commit -am
      - git push origin master
      - git push heroku master
  - Octopress installation instructions:
    - git clone git@github.com:sandinmyjoints/williamjohnbert.com.git
    - rvm use 1.9.3@octopress
    - `gem install bundler` && `bundle install`
    - edit .rvmrc to be rvm use 1.9.3@octopress
      - additional:
        http://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac/
        and http://www.moncefbelyamani.com/enhance-your-ruby-development-with-rvm-gemsets-and-rvmrc/
    - Config Heroku: http://octopress.org/docs/deploying/heroku/
  - Octopress on Emacs options
    + https://github.com/jhelwig/octomacs
      + rvm.el
    + https://github.com/yoshinari-nomura/org-octopress
  - Heroku [3/3]
    - [X] upgrade to heroku toolbelt
    - [X] install heroku accounts plugin
    - [X] spanishdict / wjb accounts

* emacs core
* TODO understand recursive editing
* TODO fix recursive editing -- seems to be broken
* TODO Master regexp syntax
  - use rx: http://www.emacswiki.org/emacs/rx to build regexps
  - pcre2el: https://github.com/joddie/pcre2el
* TODO Window and frame restore. See:
  - Seems
  - https://github.com/emacs-mirror/emacs/blob/master/lisp/frameset.el in Emacs 24.4
  - http://www.emacswiki.org/emacs/LayoutRestore
  - http://www.emacswiki.org/emacs/FrameConfig
  - http://www.emacswiki.org/emacs/SessionManagement
  - http://www.gentei.org/~yuuji/software/windows.el
  - http://www.gentei.org/~yuuji/software/revive.el
* TODO make xref-goto-xref snappier
    - https://lists.gnu.org/archive/html/emacs-devel/2016-01/msg01385.html
    - https://emacs.cafe/emacs/javascript/setup/2017/04/23/emacs-setup-javascript.html
    - https://emacs.cafe/emacs/javascript/setup/2017/05/09/emacs-setup-javascript-2.html
* emacs.d
* DONE init-local for machine-specific configs
  CLOSED: [2015-07-10 Fri 17:01]
  - eg, initial files to open
  - not under source control
  - -> use custom.el
  - [ ] move stuff into it
* DONE use use-package
  CLOSED: [2018-01-17 Wed 09:39]
  - https://github.com/jwiegley/use-package
* TODO convert to use-package/speed up startup
    - use-package
    - require-package
    - packages-install
    - https://www.reddit.com/r/emacs/comments/56fvgd/is_there_a_way_to_stop_emacs_from_adding_the/
    - https://emacs.stackexchange.com/questions/38368/how-can-i-improve-startup-time-despite-many-packages
* TODO fresh .emacs.d installs all needed packages
* TODO package-initialize can be delayed until after main.el
* TODO portable .emacs.d
* TODO literate .emacs.d
* TODO prefix all my stuff with wjb/
* packages
* TODO Versioning of packages--how to pin?
* TODO try Cask
  - cask.github.io
* org-mode
  - export settings https://orgmode.org/manual/Export-settings.html#index-_0023_002bOPTIONS
* DONE rename from *-todo.org to *.org
   CLOSED: [2014-03-18 Tue 10:21]
* DONE org mode default settings
  CLOSED: [2018-01-25 Thu 16:11]
  - http://orgmode.org/manual/In_002dbuffer-settings.html
  - https://orgmode.org/manual/Export-settings.html#Export-settings
  - see top of this buffer
* TODO why does point go to BOL after running org-toggle-item
  - when I run org-toggle to change a headline to a list item
* TODO try https://github.com/xiaoxinghu/orgajs/
* TODO nice export to google docs
  - via odt: https://orgmode.org/manual/OpenDocument-Text-export.html#OpenDocument-Text-export
* TODO Pivotal Tracker integration
** try https://github.com/jxa/pivotal-tracker
   - https://github.com/shajith/pivotal-tracker/commit/553da679b7b40f80f4e48586563219c10f41e731
   - https://github.com/emacsfodder/pivotal-tracker/tree/master
   - https://github.com/zph/pivotal-tracker/commits/master
** write org-walker, org-to-pt
   - based on https://github.com/xiaoxinghu/orgajs/, https://unifiedjs.github.io/
** ideal flow
   - org to plan, org exports to odt for import into google docs
     - https://orgmode.org/manual/Applying-custom-styles.html#Applying-custom-styles
   - org to PT, creates PT tickets
     - top level is release or epic
     - level 2 is ticket
       - keyword is ticket type: feature, chore, bug
       - tags are labels
     - level 3 is sections within description
       - bullet points are description
* TODO easy, nice-looking org export
   - to markdown
   - to HTML:
     - https://github.com/fniessen/org-html-themes
     - https://www.reddit.com/r/emacs/comments/6r32q4/orgmode_whats_your_html_export_look_like/
* TODO want to see what is ACTIVE and what was recently DONE
* TODO org-babel, particularly with sql
  - limitations:
    - it runs the entire code block (is there a way to run only a region?) so
      need to use multiple code blocks
    - blocks on query, so if it's slow, emacs is frozen
    - puts results in file, not good for large results sets (though you can tell
      it how to handle them)
  - [ ] sqlparse-region in defuns.el, maybe add a hook to run this on M-q for sql-mode
  - https://orgmode.org/worg/org-contrib/babel/intro.html#source-code-blocks
  - https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sql.html
  - https://www.emacswiki.org/emacs/SqlMode
  - [ ] try this backend: https://github.com/nikclayton/ob-sql-mode
* TODO use agenda
* TODO set dates
* TODO use archiving
* TODO share over dropbox
* TODO mobileorg or beorg
* USE export dispatcher
  - C-c C-e
  - insert options: C-c C-e #
* js
* DONE emacs flycheck does not like import syntax in jsx files in neodarwin componenents
   - tried symlinking to eslintrc file in /dev, then flycheck just wouldn't load
     config file -- why? -> because needed .js extension -- it's not json
* DONE prettier-js-mode is enabled if prettier is available
* What do I currently have
   - coffee-mode
   - discover-js2-refactor
   - flycheck
   - js2-mode
   - js-comint
   - js-doc
   - js2-highlight-vars
     - this uses a timer and it still runs after switching buffers, which causes
       error. annoying!
   - js2-refactor
   - json-mode
   - json-reformat
   - json-snatcher
   - nvm
   - rjsx
   - web-mode
*** Deleted because don't use
    - ac-js2 (don't use)
    - skewer-mode (don't use)
*** not installed but consider
   - https://github.com/NicolasPetton/xref-js2
   - indium
   - js3-mode?
   - prettier-mode
* DONE Get flycheck working reliably
   CLOSED: [2017-07-29 Sat 22:02]
   - https://github.com/magnars/.emacs.d/blob/master/settings/setup-flycheck.el
   - helpful: flycheck-verify-setup
   - have flycheck do syntax checking and run prettier
   - different eslint parsers/envs/configs/settings per project :(
     - awshotornot: next/babel/react/etc.
     - neodarwin/atalanta/sd-spelling/etc: settle on prettier
     - solution for eslint version: code that finds local eslint.js executable,
       aware of node_modules
     - solution for config files: use flycheck-verify-setup to make sure it is
       finding them right config file(s)
* DONE tern / ac-js2 / skewer
   CLOSED: [2018-01-17 Wed 09:40]
   - https://emacs.stackexchange.com/questions/17265/cannot-jump-to-definition-in-js2-mode-or-tern
* DONE use rjsx instead of js2-mode by default?
   CLOSED: [2018-01-17 Wed 09:40]
   - or only for .jsx files?
* DONE prettier-mode
   CLOSED: [2018-01-17 Wed 09:40]
* INACTIVE js3-mode https://github.com/thomblake/js3-mode
   - don't need the stuff it offers anymore
* DONE Make it.only / unonly work in js2-mode
  CLOSED: [2018-01-25 Thu 16:12]
* DONE toggle-only: only/unonly for it, test, context, describe
  CLOSED: [2018-01-25 Thu 16:46]
  - similar to toggle-boolean: when point is on line, add/remove .only
* DONE js-comint https://github.com/redguardtoo/js-comint
  CLOSED: [2018-01-25 Thu 16:46]
   - run-js, js-send-buffer
* DONE Various
  CLOSED: [2018-03-01 Thu 09:08]
  - [-] emacs js2 setup
    - [X] upgrade js2-refactor
    - [X] use const in snippets
    - [X] sane eslint
      - it only uses ~/.eslintrc if it doesn't find one higher up.
      - helpful: http://eslint.org/docs/user-guide/configuring#configuration-cascading-and-hierarchy
      - .eslintrc.js or .eslintrc.json
      - $ eslint --print-config test/cache.js
    - [X] sd-simulator automatic prettier / emacs prettier
      - https://github.com/prettier/prettier-emacs
    - [ ] get to know js2-refactorings and mnemonics
    - [ ] make js2 snappier
* DONE flycheck bug
  - https://github.com/flycheck/flycheck/issues/1311
* TODO how to handle flycheck messages
  - POS tip repo seems unmaintained, doesn't work that well: https://github.com/flycheck/flycheck-pos-tip/issues
  - two different flycheck-inlines, though they seem to have merged: https://github.com/stardiviner/flycheck-inline/issues/4
* TODO wjb-kill-node in defuns
* TODO indium
* TODO node-inspector plus tern/swank or something to inspect running node process in emacs
   - http://enthusiasm.cozy.org/archives/2014/04/emacs-node-javascript-oh-my
   - https://github.com/jscheid/kite/blob/master/kite.md
   - https://github.com/segv/jss
   - open /Applications/Google\ Chrome.app --remote-debugging-port=9222
* TODO IDE features
** DONE tern
   CLOSED: [2018-02-14 Wed 15:41]
    - [X] tern and company
      - https://emacs.cafe/emacs/javascript/setup/2017/05/09/emacs-setup-javascript-2.html
** DONE xref-js2
   CLOSED: [2018-02-14 Wed 15:41]
    - but I don't want xref-goto-xref to open in a new buffer!
** INACTIVE tide
   CLOSED: [2018-06-13 Wed 21:45]
   - https://github.com/ananthakumaran/tide
** TODO lsp-javascript
   - https://github.com/emacs-lsp/lsp-mode
   - https://github.com/emacs-lsp/lsp-javascript
   - https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
   - https://code.visualstudio.com/docs/languages/jsconfig
   - does it find types installed globally?
   - does it work with require?
   - [ ] function docstrings - p2
   - [ ] method signatures - p2
   - [ ] types
   - [ ] autosuggest imports - p2
   - [ ] show type info for company suggestion candidates - p1
   - [ ] no animation when making a new
*** sd-playground
   - types
#+BEGIN_SRC
@types/bluebird@3.5.0
@types/body-parser@1.18.2
@types/config@1.26.2
@types/cors@^2.8.4
@types/express@4.15.4
@types/express-statsd@0.3.0
@types/lodash@4.17.4
@types/mysql2@1.4.1
@types/node-statsd@0.1.1
@types/pn-logging@^4.0.0
@types/request@2.83.0
@types/sequelize@^4.37.1

#+END_SRC
*** neodarwin
   - types
#+BEGIN_SRC
react
react-dom
react-redux
#+END_SRC
   - initial attempt at neodarwin root
#+BEGIN_SRC json
{
  "compilerOptions": {
    "target": "es2017",
    "allowSyntheticDefaultImports": true,
    "noEmit": true,
    "checkJs": true,
    "lib": [ "dom", "es2017" ],
    "jsx": "react",
    "paths": {
      "components/*": ["./src/components/*"]
    }
  },
  "exclude": ["local_notes", "dist", "public"]
}

#+END_SRC
** TODO dumb-jump + smart-jump
   - dumb-jump-go C-M-g
** TODO find-file-at-point for imports in js and jsx files
  - support "index" by default
  - C-c p g project-find-file-dwim does a pretty good job of this
* TODO refactor setup-js2-mode.el
* TODO Javascript setup
  - https://www.reddit.com/r/emacs/comments/6ownl0/emacs_as_javascript_ide_in_2017_which_tools_do/
* coffee
* TODO coffee-mode
** DONE Coffee repl
   CLOSED: [2014-04-13 Sun 18:12]
** TODO coffee-mode coffee-dedent-line-backspace-ignore-blank that does nothing on blank lines

   - useful for set-rectangular-region-anchor

** TODO coffee compile
** TODO fix yasnippet smart-tab coffee-mode
   - after expanding a snippet, I don't want to indent
   - yas-expand -> yas-expand-from-trigger-key
   - smart-tab
   - minor modes: smart-tab and yas
* dirtree
* TODO use side window
  - https://www.gnu.org/software/emacs/draft/manual/html_node/elisp/Displaying-Buffers-in-Side-Windows.html#Displaying-Buffers-in-Side-Windows
* TODO dirtree: rearrange trees
  - Or replace dirtree.
  - Would be nice to have one modeline
  - http://stackoverflow.com/questions/843645/a-good-project-tree-browser-for-emacs/26705877
  - Better project tree browser
  - http://www.emacswiki.org/emacs/sr-speedbar.el, speedbar
  - https://www.emacswiki.org/emacs/TreeMode
* TODO dirtree: improve icons
  - they use Emacs widgets, which specify a glyph, which is set to an XPM icon.
  - path to icons: /usr/local/Cellar/emacs-mac/emacs-25.2-z-mac-6.4/share/emacs/25.2/etc/images/tree-widget/folder/close.xpm
  - some nice ones I could use instead: http://www.iconarchive.com/show/flat-folder-icons-by-pelfusion.html
  - or this: https://github.com/sebastiencs/icons-in-terminal
  - download new icons I want to use
  - resize them and convert to XPM using imagemagick.
  - looks like the current ones are 16x22, left-justified, the actual images are
    somewhat smaller.
** replace existing XPMs with nicer ones
* TODO possible dirtree replacement?
  - https://github.com/sebastiencs/sidebar.el

* python
* TODO python in emacs
** python-mode
  - https://github.com/fgallina/python.el is the stock python-mode in Emacs >= 24.3
  - [ ] bind Enter to newline-and-indent
  - [ ] jedi: http://tkf.github.io/emacs-jedi/latest/
  - https://github.com/jhamrick/emacs/blob/master/.emacs.d/settings/python-settings.el
  - http://wikemacs.org/index.php/Python
  - https://github.com/tkf/emacs-python-environment vs the venv thing I have installed
** ipython
  - http://stackoverflow.com/questions/17817019/how-to-open-ipython-interpreter-in-emacs
  - http://stackoverflow.com/questions/14284170/emacs-how-to-configure-emacs-for-ipython-pylint-and-autocompletion-support
  - http://www.emacswiki.org/emacs/PythonProgrammingInEmacs
  - [ ] put activated venv in buffer name when call run-python and venv is active
  - [ ] fix ^A in prompts
  - readline-complete? https://github.com/monsanto/readline-complete.el/blob/master/readline-complete.el
  - ipython.el?
  - elpy?
** django
   - https://code.djangoproject.com/wiki/Emacs
   -
* pairing
* TODO maybe try https://github.com/capitaomorte/autopair
* DONE smart-parens
  CLOSED: [2015-07-10 Fri 17:00]
  - It's "grander" than paredit-everywhere.
  - Don't use it with electric-pair-mode, which may now be on by default, so
    disable it.
  - Docs are on the wiki: https://github.com/Fuco1/smartparens/wiki
  - use kill-sexp, forward-sexp, backward-sexp, up-sexp, down-sexp.
  - Use C-- to do backwards version of forwards command.
  - In coffee-mode, don't indent-region after sp-kill-sexp (or other commands). How?
* shell
* TODO Shell in Emacs
  - See: http://snarfed.org/why_i_run_shells_inside_emacs
  - ansi-term vs shell vs eshell vs terminal-emulator
* TODO multi-term
* grep
* TODO ripgrep https://github.com/dajva/rg.el
  - works well with unicode
  - try helm-ag but with ripgrep as the command instead of ag https://github.com/syohex/emacs-helm-ag
  - main things I like about my current grep
    - -C 5 context lines
    - ignores the right patterns (directories and files)
* TODO figure out how to use dired-grep dired-find commands without overwriting grep settings
  - grep-find vs rgrep vs find-in-project
  - find-in-project is grep-find with find-args
  - find-args is my default find arguments
  - default-find-cmd is set to be (find . find-args) by maybe it gets changed
  - do I need to run grep-compute-defaults at all? What does it do?
  - META-! find . -name "models.py" | xargs grep -niEH -C 5
  - maybe the solution is to use a project mode that will search automatically.
* DONE grep through all open org buffers
  - multi-occur-in-matching-buffers. regex is \\*.org C-0 C-c 0 C-c C-0
  - occur-rename-buffer / "r" in results buffer
* DONE grep through open org-mode buffers
  - multi-occur-in-mode-string
  - multi-occur-in-this-mode
* TODO grep through *.org files in a directory
  - recursive through subdirs
  - search within any files that match glob or regex
  - another example: grep through all package.json files in node_modules
  - another example: grep through all test.jsx files in components
  - maybe something based on this, from
    https://www.emacswiki.org/emacs/RecursiveGrep Except that these are about
    running dired on files, not grepping through them. I want to find based on a
    name pattern, then grep within those files for a different pattern, and see
    the output of that grep in a compile buffer.
#+BEGIN_SRC emacs-lisp
 (defvar grep-and-find-map (make-sparse-keymap))
 (define-key global-map "\C-xf" grep-and-find-map)
 (define-key global-map "\C-xfg" 'find-grep-dired) ;; Find files in DIR matching a regexp REGEXP and start Dired on output.
 (define-key global-map "\C-xff" 'find-name-dired) ;; Search DIR recursively for files matching the globbing pattern PATTERN, and run Dired on those files.
 (define-key global-map "\C-xfl" (lambda (dir pattern)
        (interactive "DFind-name locate-style (directory):
                     \nsFind-name locate-style (filename wildcard): ")
        (find-dired dir (concat "-name '*" pattern "*'"))))
 (define-key global-map "\C-xg" 'grep)
#+END_SRC
  - [X] find-in-project-name-glob
* navigation
* TODO Try anything and/or Helm
** TODO for helm, sometimes do want popup windows
   - [ ] helpful?: https://www.reddit.com/r/emacs/comments/7rho4f/now_you_can_use_helm_with_frames_instead_of/?ref=share&ref_source=link
   - [ ] one key to make helm full window: https://emacs.stackexchange.com/a/650/2163
* markdown
* DONE GFM tables
  CLOSED: [2015-09-11 Fri 16:09]
  - http://emacs.stackexchange.com/a/5319/2163
  - http://stackoverflow.com/a/20912535/599258
* other
* TODO powerline
  - need to figure out how not to show the entire git branch name in modeline.
    or truncate it at n characters.
* TODO elfeed http://nullprogram.com/blog/2013/09/04/
* TODO try olivetti mode
* TODO magithub / gh package
  - https://github.com/vermiculus/magithub/blob/master/README.md
* TODO Review for ideas:
  - http://news.ycombinator.com/item?id=1654164
  - https://github.com/technomancy/emacs-starter-kit
  - https://github.com/bbatsov/prelude
  - https://github.com/purcell/emacs.d
  - https://raw.github.com/expez/.emacs.d/master/init-javascript.el
  - https://github.com/kaushalmodi/.emacs.d (setup-python)
  - http://gongzhitaao.org/dotemacs/
  - https://github.com/vidjuheffex/dotemacs/blob/master/emacs.org (literate)
  - https://github.com/GustafB/.emacs.d/blob/master/myinit.org (literate)
* TODO Switch from smex to amx
  - https://github.com/DarwinAwardWinner/amx
* TODO Edit with Emacs OS X service
  - https://react-hn.appspot.com/#/story/16395379?_k=v1k1cm
* How to improve performance of buffers with very long lines
** https://emacs.stackexchange.com/a/603/2163
  - break input file into lines:
#+BEGIN_SRC
# Using python
$ < infile.json python -c 'import json, sys ; json.dump(json.load(sys.stdin), sys.stdout, indent=2)

# Bash
$ < infile fold -s
#+END_SRC
  - interesting ideas: https://emacs.stackexchange.com/a/8152/2163
** DONE View Large Files https://github.com/m00natic/vlfi
** DONE OverLongLineMode
* TODO fewer popup windows
  - maybe due to `switch-to-buffer-preserve-window-point`, see https://github.com/emacs-mirror/emacs/blob/emacs-26/etc/NEWS  -
* open in new window
I think that the problem has to do with dirtree window being dedicated.

I want inhibit-same-window to always be nil when display-buffer is called from
dirtree-mode.
* DONE bash command to open current directory
  CLOSED: [2018-06-03 Sun 22:31]
  - [X] in dired
  - [X] add to dirtree
  - implemented as functions in bashrc
* TODO packages to remove?
  - find-file-in-project
  - smart-mode-line
  - rainbow-delimiters
  - mac-pseudo-daemon
  - typescript-mode
** gone
  - smartparens
  - smart-jump
  - skewer-mode
  - tern
  - company-tern
* TODO hook up auth-sources to keychain
  - https://emacs.stackexchange.com/questions/3869/mac-os-keychain-with-smtp-email-password#3872
  - https://lists.gnu.org/archive/html/bug-gnu-emacs/2014-11/msg00805.html
  - https://lists.gnu.org/archive/html/help-gnu-emacs/2014-11/msg00543.html
  - https://www.gnu.org/software/emacs/manual/html_mono/auth.html
#+BEGIN_SRC emacs-lisp
;; test it
(push 'macos-keychain-internet auth-sources)
(push 'macos-keychain-generic auth-sources)
(message (format "%s" (auth-source-search :label "github api token")))

(message (format "%s" (auth-source-search :server "api.github.com")))

;; reset
(setq auth-sources '("~/.authinfo" "~/.authinfo.gpg" "~/.netrc"))
#+END_SRC
* bug https://github.com/joaotavora/yasnippet/commit/d3bb879356288ef38975fbf85947c7371b8c9759
* How to build emacs-mac
  - see ~/dotfiles/dev/bin/emacs-mac-install
* Try NS port
  - but don't want links to overwrite Mac-port
  - brew install emacs --with-cocoa && brew unlink emacs && brew link emacs-mac
  -
* setenv / getenv / process-environment
  - See https://www.gnu.org/software/emacs/manual/html_node/elisp/System-Environment.html
  - dir local env vars: https://emacs.stackexchange.com/q/35964/2163
* Use:
  - markdown-preview-mode
  - dig
  - list-timers
  - list-faces-display
  - list-processes
  - emacsclient -T
#+BEGIN_QUOTE
Emacsclient has a new option '-T' / '--tramp'.
This helps with using a local Emacs session as the server for a remote
emacsclient.  With appropriate setup, one can now set the EDITOR
environment variable on a remote machine to emacsclient, and
use the local Emacs to edit remote files via Tramp.  See the node
"(emacs) emacsclient Options" in the user manual for the details.
#+END_QUOTE
  - Occur
    - multi-occur-in-matching-buffers
  - subword-backward-kill (C-backspace, or M-backspace)
  - mc/
    - mc/edit-lines
    - mc/beginnings-of-lines (C-M-<)
    - mc/endings-of-lines (C-M->)
    - mc/mark-all-like-this (C-*)
    - mc/mark-all-words-like-this
    - mc/insert-numbers
  - org-table (convert-region, transpose, etc)
    - orgtbl-mode minor mode for working with tables
  - sorting
    - sort-lines
    - reverse-region
    - sort-fields and sort-numeric-fields
    - sort-regexp-fields
    - org-sort-entries
  - rectangle-number-lines (C-x r N)
  - Keyboard macros
    - counters:
      http://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macro-Counter.html
      (C-x C-k C-i)
    - query: http://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macro-Query.html#Keyboard-Macro-Query
    - stepwise edit: http://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macro-Step_002dEdit.html#Keyboard-Macro-Step_002dEdit
  - set-goal-column (C-x C-n)
  - terminal-mode for ssh
  - color-themes
    - save current as?
    - use one that works for terminals
  - view-lossage (C-h l)
  - repeat (C-x z)
  - highlight-lines-matching-regexp (M-s h l)
  - tumme (images)
  - what-cursor-position (C-x =, also C-u C-x =)
  - shell-command-on-buffer (C-c ! [note: overwrites something in org-mode?])
  - eval
    - eval-and-replace (C-c C-e)
    - eval-expression (M-:, also eval and insert: C-u M-:)
  - ispell
  - dired-jump
  - clone-indirect-buffer http://www.gnu.org/software/emacs/manual/html_node/emacs/Indirect-Buffers.html
  - flush-lines <regex>, will delete matching lines. Enter ^$ to remove all blank lines.
  - other-frame reverse: C-- C-x 5 o
  - org-mode C-c C-u: outline-up-heading
  - C-0 (imenu)
  - clean-buffer-list
  - ibuffer to search or query-replace in marked buffers: https://www.emacswiki.org/emacs/IbufferMode
    - like dired for buffers. `/.` filters by file-extension. `//` clears filters.
  - reveal-in-osx-finder
  - eww
    - custom theme for eww: https://emacs.stackexchange.com/a/4285/2163
  - quickrun
  - C-c C-o for folding in js2-mode, C-Enter
  - projectile-find-file-dwim C-c p g
  - default-value
default-value is a built-in function in 'C source code'.

(default-value SYMBOL)

Return SYMBOL's default value.
This is the value that is seen in buffers that do not have their own values
for this variable.  The default value is meaningful for variables with
local bindings in certain buffers.

** DONE
  - zap-to-char (M-z and M-Z)
  - Tramp:
    - C-x C-f /sudo:root@localhost:/private/etc/hosts  *or*  C-x C-f /sudo::/private/etc/hosts
    - C-x C-f /docker:user@container:/path/to/file
    - C-x C-f /ssh:wbert@wjb.sh:/etc
  - Smex (M-x, M-X)
    - updated fork: https://github.com/DarwinAwardWinner/smex
  - align-regexp (C-|)
  - join-line (C-c C-j)
  - Org-mode (C-c C-n/p; C-c C-f/b)
